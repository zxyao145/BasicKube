@namespace BasicKube.Web.Components
@inherits CreateResForm

<div>
    <div style="margin-bottom: 0.75rem;">
        <Space>
            <SpaceItem>
                应用名
            </SpaceItem>
            <SpaceItem Style="width: 300px;">
                <Input Placeholder="应用名"
                       MaxLength="32"
                       @bind-Value="@DaemonSetCreateCommand.GrpName" 
                       Disabled="@IsEdit" />
            </SpaceItem>

            <SpaceItem Style="margin-left: 1rem;">
                环境
            </SpaceItem>
            <SpaceItem Style="width: 180px;">
                <AppEnvSelect
                    DefaultEnvName="@(DaemonSetCreateCommand.Env)"
                    Disable="@IsEdit"
                    @bind-EnvName="DaemonSetCreateCommand.Env" />
      
            </SpaceItem>
        </Space>
    </div>

    <PodContainerEdit @ref="@_podContainerEdit"  Containers="@_createCommand.Containers" />

</div>

@code {
    private DaemonSetEditCommand _createCommand = new DaemonSetEditCommand();
    private PodContainerEdit? _podContainerEdit;

    public DaemonSetEditCommand DaemonSetCreateCommand
    {
        get => _createCommand;
        set => _createCommand = value;
    } 

    public CreateDaemonSetAppForm()
    {
        Title = "DaemonSet";
    }

    protected override async Task OnOkAsync()
    {
        DaemonSetCreateCommand.Containers = _podContainerEdit!.Containers;
        DaemonSetCreateCommand.AppName = $"{DaemonSetCreateCommand.GrpName}-{DaemonSetCreateCommand.Env}";
        DaemonSetCreateCommand.IamId = IamId;

        var http = ServiceProvider.GetRequiredService<DaemonSetHttp>();
        bool res = false;
        if (IsEdit)
        {
            res = await http.Update(DaemonSetCreateCommand);
        }
        else
        {
            res = await http.Create(DaemonSetCreateCommand);
        }

        _ = res ? (NoticeSuccess(MsgPrefix + "成功")) : (NoticeError(MsgPrefix + "失败"));

        if (OnOk != null)
        {
            await OnOk();
        }
        if (res)
        {
            await this.CloseAsync();
        }
    }
}