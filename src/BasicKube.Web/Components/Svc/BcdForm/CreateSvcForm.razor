@namespace BasicKube.Web.Components
@inherits CreateResForm

<div>
    <GridRow Class="mb-3">
        <GridCol Span="12">
            <FormControl Required="true" LabelCls="label-5">
                <LabelContent>
                    服务组名
                </LabelContent>
                <ChildContent>
                    <Input Placeholder="服务组名"
                           MaxLength="32"
                           @bind-Value="@SvcEditCommand.SvcGrpName"
                           Disabled="@IsEdit" />
                </ChildContent>
            </FormControl>
        </GridCol>
        <GridCol Span="12">
            <FormControl Required="true" LabelCls="label-5">
                <LabelContent>
                    环境
                </LabelContent>
                <ChildContent>
                    <AppEnvSelect DefaultEnvName="@(SvcEditCommand.Env)"
                                  Disable="@IsEdit"
                                  EnvNameChanged="@OnEnvNameChanged"
                                  />
                </ChildContent>
            </FormControl>
        </GridCol>
    </GridRow>


    <CascadingValue Value="@SvcEditCommand">
        <GridRow Class="mb-5">
            <GridCol Span="12">
                <FormControl Required="true" LabelCls="label-5">
                    <LabelContent>
                        服务类型
                    </LabelContent>
                    <ChildContent>
                        <Select TItem="string"
                                TItemValue="string"
                                DataSource="@SvcType.SvcTypeList"
                                @bind-Value="@SvcEditCommand.Type"
                                Placeholder="选择服务类型"
                                DefaultActiveFirstOption="true"
                                DefaultValue="@SvcType.ClusterIP"
                                OnSelectedItemChanged="OnSelectedSvcTypeChanged">
                        </Select>
                    </ChildContent>
                </FormControl>
            </GridCol>
            <GridCol Span="12">
                <FormControl Required="true" LabelCls="label-5">
                    <LabelContent>
                        关联应用
                    </LabelContent>
                    <ChildContent>
                        <Select TItem="string"
                                TItemValue="string"
                                DataSource="@_appNames"
                                @bind-Value="@SvcEditCommand.RelationAppName"
                                Placeholder="选择关联的应用"
                                DefaultActiveFirstOption="true"
                                    EnableSearch>
                        </Select>
                    </ChildContent>
                </FormControl>
            </GridCol>
        </GridRow>

        <SvcPortConfig />
    </CascadingValue>
</div>


@code {

    private SvcEditCommand _createCommand = new SvcEditCommand();
    public SvcEditCommand SvcEditCommand
    {
        get => _createCommand;
        set
        {
            _createCommand = value;
            StateHasChanged();
        }
    }
    private List<string> _appNames = new List<string>();
    public CreateSvcForm(int iamId) : base()
    {
        IamId = iamId;
        Title = "Service";
    }

    protected override async Task OnShowingAsync(System.ComponentModel.CancelEventArgs e)
    {
        await GetEnvAppName();
        await base.OnShowingAsync(e);
    }

    private async Task GetEnvAppName()
    {
        var http = ServiceProvider.GetRequiredService<DeployHttp>();
        var appList = await http.List(IamId, "", SvcEditCommand.Env);
        _appNames = appList.Select(x => x.Name).ToList();
        await StateHasChangedAsync();
    }

    private async Task OnSelectedSvcTypeChanged(string value)
    {
        await StateHasChangedAsync();
    }

    private async Task OnEnvNameChanged(string value)
    {
        SvcEditCommand.Env = value;
        await GetEnvAppName();
    }

    protected override async Task OnOkAsync()
    {
        SvcEditCommand.IamId = IamId;

        var http = ServiceProvider.GetRequiredService<SvcHttp>();
        bool res = false;
        if (IsEdit)
        {
            res = await http.Update(SvcEditCommand);
        }
        else
        {
            res = await http.Create(SvcEditCommand);
        }

        _ = res ? (NoticeSuccess(MsgPrefix + "成功")) : (NoticeError(MsgPrefix + "失败"));

        if (OnOk != null)
        {
            await OnOk();
        }
        if (res)
        {
            await this.CloseAsync();
        }
    }
}