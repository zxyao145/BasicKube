@page "/pages/kube/svcGrpList/{SvcName?}"
@inject SvcHttp SvcHttp
@inject NavigationManager NavigationManager

<div class="page-content">
    <Breadcrumb Style="margin-bottom: 1rem;">
        @if (string.IsNullOrWhiteSpace(SvcName))
        {
            <BreadcrumbItem>
                <b>
                    <IconPark.ConnectionPoint /> 服务组
                </b>
            </BreadcrumbItem>
        }
        else
        {
            <BreadcrumbItem OnClick="ReturnSvcList">
                <b class="cursor-pointer">
                    <IconPark.ConnectionPoint /> 服务组
                </b>
            </BreadcrumbItem>
            <BreadcrumbItem>
                <b>服务</b>
            </BreadcrumbItem>
        }
    </Breadcrumb>

     <blockquote class="operate-wrapper">
        <Button Type="@ButtonType.Primary" Size="small" OnClick="@OnCreateSvcClick">新建服务</Button>
    </blockquote>

    @if (string.IsNullOrWhiteSpace(SvcName))
    {
        <AntList DataSource="@_svcInfos" TItem="SvcGrpInfo">
            <ListItem Class="page-resource-list-item" OnClick="() => OnSvcClick(context)">
                <ListItemMeta Description="">
                    <TitleTemplate>
                        @context.Name
                    </TitleTemplate>
                </ListItemMeta>
            </ListItem>
        </AntList>
    }
    else
    {
        <CascadingValue Value="@(this)" IsFixed="true">
            <SvcList SvcGrpName="@SvcName" />
        </CascadingValue>
    }
</div>

@code {

    [CascadingParameter(Name = "IamId")]
    public int IamId { get; set; }

    [Parameter]
    public string? SvcName { get; set; }

    private List<SvcGrpInfo> _svcInfos = new List<SvcGrpInfo>();

    protected override async Task OnParametersSetAsync()
    {
        await GetGrpList();
    }

    private async Task GetGrpList()
    {
        _svcInfos = await SvcHttp.ListGrp(IamId);
        StateHasChanged();
    }

    private void OnSvcClick(SvcGrpInfo context)
    {
        NavigationManager.NavigateTo($"/{Routes.SvcGrpPage}/{context.Name}");
    }

    internal void ReturnSvcList()
    {
        NavigationManager.NavigateTo($"/{Routes.SvcGrpPage}");
    }

    private async Task OnCreateSvcClick()
    {
        var form = new CreateSvcForm(IamId);
        form.OnOk = async () =>
        {
            await GetGrpList();
        };
        await form.ShowAsync();
    }
}
