@inject NavigationManager _navigationManager
@inject AccountHttp _accountHttp
@inject AuthService _authService

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly" OnNavigateAsync="@OnNavigateAsync">
        <Found Context="routeData">
            <CascadingValue Value="routeData">
                <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
            </CascadingValue>
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <p role="alert">Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
    <AntContainer />
    <BcdFormContainer />
</CascadingAuthenticationState>

@code {
    private async Task OnNavigateAsync(NavigationContext args)
    {
        Console.WriteLine("OnNavigateAsync");
        var isAuthed = await _authService.GetIsAuthed();
        if (isAuthed && !(await _authService.IsAuthenticated()))
        {
            var userProfile = await _accountHttp.GetUserProfile();
            if (userProfile != null)
            {
                _authService.SetUserProfile(userProfile);
            }
            else
            {
                await _authService.ClearAuthed();
            }
        }
    }
}